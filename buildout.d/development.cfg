[buildout]
extends = base.cfg

parts +=
    zopeskel
    omelette
    test
    ipzope
    instance

eggs +=
    sauna.reload
    plone.jsonapidemo [develop,test]

# =========================
# Develop external packages
# =========================
extensions += mr.developer
sources = sources
auto-checkout =
    plone.jsonapi
    plone.api

[sources]
plone.jsonapi                  = git git@github.com:seletz/plone.jsonapi.git
plone.api                      = git https://github.com/plone/plone.api.git
sauna.reload                   = git git://github.com/epeli/sauna.reload.git

[zopeskel]
recipe = zc.recipe.egg
eggs =
   ZopeSkel < 3.0dev
   Paste
   PasteDeploy
   PasteScript
   zopeskel.dexterity
   ${buildout:eggs}

# ===============================================
# Mirrors python namespaces into one handy folder
# ===============================================
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}



# ==========================================
# Prepare test-runner for running unit tests
# ==========================================
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs = ${buildout:eggs}


[ipzope]
recipe = zc.recipe.egg
eggs =
    ipython==0.10.2
    ${instance:eggs}
initialization =
    import sys, os
    os.environ["SOFTWARE_HOME"] = "${instance:location}"
    os.environ["INSTANCE_HOME"] = "${instance:location}"
    sys.argv[1:1] = "-p zope".split()
extra-paths =
    ${instance:location}/lib/python
scripts = ipython=ipzope


# ==================================
# Create a development Zope instance
# ==================================
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
debug-mode = off
verbose-security = off
eggs = ${buildout:eggs}

zope-conf-additional =
        %import sauna.reload

# vim: set ft=cfg ts=4 sw=4 expandtab tw=78 :

